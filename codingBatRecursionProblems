// I completed all 30 at http://codingbat.com/java/Recursion-1 ... but didn't start recording results until towards the end
/*
Given a string that contains a single pair of parenthesis, compute recursively a new string made of only of the parenthesis and their contents, so "xyz(abc)123" yields "(abc)".


parenBit("xyz(abc)123") → "(abc)"
parenBit("x(hello)") → "(hello)"
parenBit("(xy)1") → "(xy)"
*/

public String parenBit(String str) {
  String nonparen = "";
  String first = str.substring(0, 1);
  String rest = str.substring(1);
  if(str.length() == 1) return nonparen;
  
  if(first.equals("(")) {
    int position = str.indexOf(")");
    return str.substring(0, position + 1);
  }
  
  return nonparen + parenBit(rest);
}



